@inherits LayoutComponentBase
@inject HttpClient httpClient
@inject IJSRuntime Js

<div class="content px-4">
    <div class="box">
        <div class="box-head">
            <h3 class="title">@Title_InsBrand</h3>
        </div>
        <div class="box-body">
            <EditForm Model="BrandModel" OnValidSubmit="AddBrand">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <h3>@Title_InsBrand</h3>
                <div class="col-xl-6 col-lg-12 col-md-12 col-sm-12">

                    <div class="form-group my-2">
                        <label>Company:</label>
                        <select @bind="@BrandModel.CompanyId" class="form-control">
                            <option selected disabled value="0">-- Select Company --</option>
                            @foreach (var Company in CompanyListModel)
                            {
                                <option value="@Company.Id">@Company.CompanyName</option>
                            }
                        </select>
                        <ValidationMessage For="@(() => BrandModel.CompanyId)" />
                    </div>

                    <div class="form-group my-2">
                        <label>Brand Name:</label>
                        <input @bind-value="@BrandModel.BrandName" type="text" class="form-control" />
                        <ValidationMessage For="@(() => BrandModel.BrandName)" />
                    </div>

                    <button type="submit" class="btn btn-success mt-2">Add Brand</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private string Title_InsBrand { get; set; } = "Insert Brand";

    public List<CompanyViewModel> CompanyListModel = new List<CompanyViewModel>();

    public BrandViewModel BrandModel = new BrandViewModel();

    [Inject]
    public ApiUri ApiUri { get; set; }

    protected override async Task OnInitializedAsync()
    {
        CompanyListModel =
            await httpClient.GetFromJsonAsync<List<CompanyViewModel>>($"{ApiUri.ApiUriAddress}/api/Product/GetCompanies");

        //var strRes = companyViewModels.StatusCode;
        //var strResx = await companyViewModels.Content.ReadAsStringAsync();
        //await Js.InvokeVoidAsync("alert", $"{strResx}");

    }

    async Task AddBrand()
    {
        var Res = await httpClient.PostAsJsonAsync($"{ApiUri.ApiUriAddress}/api/Product/InsertBrand", BrandModel);
        var ResModel = await Res.Content.ReadFromJsonAsync<ResponseModel>();

        if (Res.StatusCode.ToString() == "OK")
            await Js.InvokeVoidAsync("toastr.success", "New brand added", "Succeed");
        else
            await Js.InvokeVoidAsync("toastr.error", $"{ResModel.Error}", "Error");

        BrandModel.BrandName = "";
        BrandModel.CompanyId = 0;
    }
}
